// Generated by Dagger (https://dagger.dev).
package com.example.androidstandards.data.network;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import okhttp3.Call;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitFlickrNetwork_Factory implements Factory<RetrofitFlickrNetwork> {
  private final Provider<Context> contextProvider;

  private final Provider<Call.Factory> okHttpCallFactoryProvider;

  public RetrofitFlickrNetwork_Factory(Provider<Context> contextProvider,
      Provider<Call.Factory> okHttpCallFactoryProvider) {
    this.contextProvider = contextProvider;
    this.okHttpCallFactoryProvider = okHttpCallFactoryProvider;
  }

  @Override
  public RetrofitFlickrNetwork get() {
    return newInstance(contextProvider.get(), okHttpCallFactoryProvider.get());
  }

  public static RetrofitFlickrNetwork_Factory create(Provider<Context> contextProvider,
      Provider<Call.Factory> okHttpCallFactoryProvider) {
    return new RetrofitFlickrNetwork_Factory(contextProvider, okHttpCallFactoryProvider);
  }

  public static RetrofitFlickrNetwork newInstance(Context context, Call.Factory okHttpCallFactory) {
    return new RetrofitFlickrNetwork(context, okHttpCallFactory);
  }
}
